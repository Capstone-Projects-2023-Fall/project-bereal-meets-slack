"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[9185],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=n,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return r?a.createElement(h,o(o({ref:t},p),{},{components:r})):a.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6618:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:4},o="Active Hours Utility Module Spec",l={unversionedId:"api-specification/activeHoursSpec",id:"api-specification/activeHoursSpec",title:"Active Hours Utility Module Spec",description:"Methods",source:"@site/docs/api-specification/activeHoursSpec.md",sourceDirName:"api-specification",slug:"/api-specification/activeHoursSpec",permalink:"/project-bereal-meets-slack/docs/api-specification/activeHoursSpec",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-bereal-meets-slack/edit/main/documentation/docs/api-specification/activeHoursSpec.md",tags:[],version:"current",lastUpdatedBy:"Vivek R Patel",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Command Modules Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/CommandModules"},next:{title:"Blacklist Utility Module Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/blacklistUtilsSpec"}},s={},d=[{value:"Methods",id:"methods",level:2},{value:"<code>fetchActiveHoursFromDB(guildId)</code>",id:"fetchactivehoursfromdbguildid",level:3},{value:"<code>(async) fetchActiveHoursFromDB(guildId) \u2192 {Promise.&lt;{start_time: string, end_time: string}&gt;}</code>",id:"async-fetchactivehoursfromdbguildid--promisestart_time-string-end_time-string",level:4},{value:"Parameters:",id:"parameters",level:5},{value:"Returns:",id:"returns",level:5},{value:"<code>storeOperatingHours(guildId, startTime, endTime)</code>",id:"storeoperatinghoursguildid-starttime-endtime",level:3},{value:"<code>(async) storeOperatingHours(guildId, startTime, endTime) \u2192 {Promise.&lt;void&gt;}</code>",id:"async-storeoperatinghoursguildid-starttime-endtime--promisevoid",level:4},{value:"Parameters:",id:"parameters-1",level:5},{value:"Returns:",id:"returns-1",level:5},{value:"<code>getRandomHourWithinActiveHours(activeHoursData)</code>",id:"getrandomhourwithinactivehoursactivehoursdata",level:3},{value:"<code>getRandomHourWithinActiveHours(activeHoursData) \u2192 {string}</code>",id:"getrandomhourwithinactivehoursactivehoursdata--string",level:4},{value:"Parameters:",id:"parameters-2",level:5},{value:"Returns:",id:"returns-2",level:5}],p={toc:d};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"active-hours-utility-module-spec"},"Active Hours Utility Module Spec"),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"fetchactivehoursfromdbguildid"},(0,n.kt)("inlineCode",{parentName:"h3"},"fetchActiveHoursFromDB(guildId)")),(0,n.kt)("h4",{id:"async-fetchactivehoursfromdbguildid--promisestart_time-string-end_time-string"},(0,n.kt)("inlineCode",{parentName:"h4"},"(async) fetchActiveHoursFromDB(guildId) \u2192 {Promise.<{start_time: string, end_time: string}>}")),(0,n.kt)("p",null,"Fetches active operating hours for a guild from the database."),(0,n.kt)("h5",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"guildId")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The ID of the Discord guild.")))),(0,n.kt)("h5",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A promise that resolves to an object containing ",(0,n.kt)("inlineCode",{parentName:"p"},"start_time")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"end_time")," representing the active operating hours for the guild."),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise.<{start_time: string, end_time: string}>")))),(0,n.kt)("h3",{id:"storeoperatinghoursguildid-starttime-endtime"},(0,n.kt)("inlineCode",{parentName:"h3"},"storeOperatingHours(guildId, startTime, endTime)")),(0,n.kt)("h4",{id:"async-storeoperatinghoursguildid-starttime-endtime--promisevoid"},(0,n.kt)("inlineCode",{parentName:"h4"},"(async) storeOperatingHours(guildId, startTime, endTime) \u2192 {Promise.<void>}")),(0,n.kt)("p",null,"Stores or updates operating hours for a guild in the database."),(0,n.kt)("h5",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"guildId")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The ID of the Discord guild.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"startTime")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The start time of the operating hours.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"endTime")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The end time of the operating hours.")))),(0,n.kt)("h5",{id:"returns-1"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A Promise that resolves when the operating hours are successfully stored or updated."),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise<void>")))),(0,n.kt)("h3",{id:"getrandomhourwithinactivehoursactivehoursdata"},(0,n.kt)("inlineCode",{parentName:"h3"},"getRandomHourWithinActiveHours(activeHoursData)")),(0,n.kt)("h4",{id:"getrandomhourwithinactivehoursactivehoursdata--string"},(0,n.kt)("inlineCode",{parentName:"h4"},"getRandomHourWithinActiveHours(activeHoursData) \u2192 {string}")),(0,n.kt)("p",null,"Generates a random hour within the active operating hours for a guild."),(0,n.kt)("h5",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"activeHoursData")),(0,n.kt)("td",{parentName:"tr",align:null},"Object"),(0,n.kt)("td",{parentName:"tr",align:null},"An object containing ",(0,n.kt)("inlineCode",{parentName:"td"},"start_time")," and ",(0,n.kt)("inlineCode",{parentName:"td"},"end_time"),".")))),(0,n.kt)("h5",{id:"returns-2"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A formatted string representing a random hour within the active hours."),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string")))))}u.isMDXComponent=!0}}]);