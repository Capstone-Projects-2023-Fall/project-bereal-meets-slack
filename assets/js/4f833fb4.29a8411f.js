"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3573],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),m=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=m(n),c=a,g=s["".concat(o,".").concat(c)]||s[c]||u[c]||i;return n?r.createElement(g,l(l({ref:t},d),{},{components:n})):r.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:a,l[1]=p;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5903:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:13},l="Prompt Timeout Class Spec",p={unversionedId:"api-specification/promptTimeoutSpec",id:"api-specification/promptTimeoutSpec",title:"Prompt Timeout Class Spec",description:"Description",source:"@site/docs/api-specification/promptTimeoutSpec.md",sourceDirName:"api-specification",slug:"/api-specification/promptTimeoutSpec",permalink:"/project-bereal-meets-slack/docs/api-specification/promptTimeoutSpec",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-bereal-meets-slack/edit/main/documentation/docs/api-specification/promptTimeoutSpec.md",tags:[],version:"current",lastUpdatedBy:"Tara Feeley",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"docsSidebar",previous:{title:"Prompt Class Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/promptSpec"},next:{title:"Prompt Utility Module Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/promptUtilsSpec"}},o={},m=[{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>setupPrompt(channelId, message, user, originalPrompt)</code>",id:"setuppromptchannelid-message-user-originalprompt",level:3},{value:"<code>setupPrompt(channelId, message, user, originalPrompt) \u2192 {void}</code>",id:"setuppromptchannelid-message-user-originalprompt--void",level:4},{value:"Description:",id:"description-1",level:4},{value:"Parameters:",id:"parameters",level:5},{value:"Parameters:",id:"parameters-1",level:5},{value:"<code>setPromptTimeout(promptId, duration, message, expiredContent, user, originalPrompt, channelId)</code>",id:"setprompttimeoutpromptid-duration-message-expiredcontent-user-originalprompt-channelid",level:3},{value:"<code>setPromptTimeout(promptId, duration, message, expiredContent, user, originalPrompt, channelId) \u2192 {void}</code>",id:"setprompttimeoutpromptid-duration-message-expiredcontent-user-originalprompt-channelid--void",level:4},{value:"Parameters:",id:"parameters-2",level:5},{value:"<code>handleReprompt(user, originalPrompt, channelId, originalMessage)</code>",id:"handlerepromptuser-originalprompt-channelid-originalmessage",level:3},{value:"<code>handleReprompt(user, originalPrompt, channelId, originalMessage)</code>",id:"handlerepromptuser-originalprompt-channelid-originalmessage-1",level:4},{value:"Parameters:",id:"parameters-3",level:5}],d={toc:m};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prompt-timeout-class-spec"},"Prompt Timeout Class Spec"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"A utility class managing timeouts for prompts and reprompts."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    this.client = client;\n    this.activePrompts = new Map();\n    this.repromptTimeouts = new Map();\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"client"),": The Discord.js client instance. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"activePrompts"),": The prompts that have been sent in the channel."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"repromptTimeouts"),": The duration before a prompt is resent.")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"setuppromptchannelid-message-user-originalprompt"},(0,a.kt)("inlineCode",{parentName:"h3"},"setupPrompt(channelId, message, user, originalPrompt)")),(0,a.kt)("h4",{id:"setuppromptchannelid-message-user-originalprompt--void"},(0,a.kt)("inlineCode",{parentName:"h4"},"setupPrompt(channelId, message, user, originalPrompt) \u2192 {void}")),(0,a.kt)("h4",{id:"description-1"},"Description:"),(0,a.kt)("p",null,"This method sets up the timeout and message for a prompt."),(0,a.kt)("h5",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"channelId")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The ID of the Discord channel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"message")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The message content for the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"user")),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"The Discord user associated with the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"originalPrompt")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The original prompt content.")))),(0,a.kt)("h5",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"channelId")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The ID of the Discord channel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"message")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The message content for the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"user")),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"The Discord user associated with the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"originalPrompt")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The original prompt content.")))),(0,a.kt)("h3",{id:"setprompttimeoutpromptid-duration-message-expiredcontent-user-originalprompt-channelid"},(0,a.kt)("inlineCode",{parentName:"h3"},"setPromptTimeout(promptId, duration, message, expiredContent, user, originalPrompt, channelId)")),(0,a.kt)("h4",{id:"setprompttimeoutpromptid-duration-message-expiredcontent-user-originalprompt-channelid--void"},(0,a.kt)("inlineCode",{parentName:"h4"},"setPromptTimeout(promptId, duration, message, expiredContent, user, originalPrompt, channelId) \u2192 {void}")),(0,a.kt)("p",null,"Sets a timeout for a prompt identified by ",(0,a.kt)("inlineCode",{parentName:"p"},"promptId"),"."),(0,a.kt)("h5",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"promptId")),(0,a.kt)("td",{parentName:"tr",align:null},"any"),(0,a.kt)("td",{parentName:"tr",align:null},"Identifier for the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"duration")),(0,a.kt)("td",{parentName:"tr",align:null},"number"),(0,a.kt)("td",{parentName:"tr",align:null},"Duration of the timeout in milliseconds.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"message")),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"Discord message object associated with the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"expiredContent")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Content to display when the prompt expires.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"user")),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"Discord user object associated with the prompt.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"originalPrompt")),(0,a.kt)("td",{parentName:"tr",align:null},"any"),(0,a.kt)("td",{parentName:"tr",align:null},"Original prompt content.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"channelId")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"ID of the Discord channel where the prompt is active.")))),(0,a.kt)("h3",{id:"handlerepromptuser-originalprompt-channelid-originalmessage"},(0,a.kt)("inlineCode",{parentName:"h3"},"handleReprompt(user, originalPrompt, channelId, originalMessage)")),(0,a.kt)("h4",{id:"handlerepromptuser-originalprompt-channelid-originalmessage-1"},(0,a.kt)("inlineCode",{parentName:"h4"},"handleReprompt(user, originalPrompt, channelId, originalMessage)")),(0,a.kt)("p",null,"Handles reprompting the user."),(0,a.kt)("h5",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"user")),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"The user object.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"originalPrompt")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The original prompt message.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"channelId")),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The ID of the channel where the reprompt message will be sent.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"originalMessage")),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"The original message that triggered the reprompt.")))))}s.isMDXComponent=!0}}]);