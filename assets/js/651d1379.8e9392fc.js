"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7607],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>h});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(o),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||n;return o?r.createElement(h,s(s({ref:t},p),{},{components:o})):r.createElement(h,s({ref:t},p))}));function h(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,s=new Array(n);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<n;c++)s[c]=o[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},4757:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var r=o(7462),a=(o(7294),o(3905));const n={sidebar_position:5},s="Use Cases",i={unversionedId:"requirements/use-case-descriptions",id:"requirements/use-case-descriptions",title:"Use Cases",description:"Use Case 1:",source:"@site/docs/requirements/use-case-descriptions.md",sourceDirName:"requirements",slug:"/requirements/use-case-descriptions",permalink:"/project-bereal-meets-slack/docs/requirements/use-case-descriptions",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-bereal-meets-slack/edit/main/documentation/docs/requirements/use-case-descriptions.md",tags:[],version:"current",lastUpdatedBy:"Rishi Duggal",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Features and Requirements",permalink:"/project-bereal-meets-slack/docs/requirements/features-and-requirements"},next:{title:"Software Development Plan",permalink:"/project-bereal-meets-slack/docs/category/software-development-plan"}},l={},c=[{value:"Use Case 1:",id:"use-case-1",level:2},{value:"Use Case 2: User Responds to a Slackbot Prompt",id:"use-case-2-user-responds-to-a-slackbot-prompt",level:2},{value:"Use Case 3: Moderator Reviews User-Submitted Response",id:"use-case-3-moderator-reviews-user-submitted-response",level:2},{value:"Use Case 4: User Reacts to a New Post Notification",id:"use-case-4-user-reacts-to-a-new-post-notification",level:2},{value:"Use Case 5: Moderator Accesses Reaction Data in Database",id:"use-case-5-moderator-accesses-reaction-data-in-database",level:2}],p={toc:c};function m(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-cases"},"Use Cases"),(0,a.kt)("h2",{id:"use-case-1"},"Use Case 1:"),(0,a.kt)("p",null,"Owner of the Slack Workspace Configures the Slackbot\nActor: Owner of the Slack workspace.\nTriggering Event: The owner needs to configure the Slackbot for the community.\nNormal Flow:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Owner accesses the workspace settings."),(0,a.kt)("li",{parentName:"ol"},"Owner selects the option to enable the Slackbot."),(0,a.kt)("li",{parentName:"ol"},"Owner assigns roles and privileges to users in the community."),(0,a.kt)("li",{parentName:"ol"},"Owner defines moderation and content guidelines."),(0,a.kt)("li",{parentName:"ol"},"Owner configures the schedule for SlackBot prompts, defining the hours when the Slackbot will send prompts."),(0,a.kt)("li",{parentName:"ol"},"Owner selects how many prompts the Slackbot will send during a given time period."),(0,a.kt)("li",{parentName:"ol"},"Owner sets the duration for prompt responses to remain in the chat."),(0,a.kt)("li",{parentName:"ol"},"Owner saves the configuration settings.")),(0,a.kt)("h2",{id:"use-case-2-user-responds-to-a-slackbot-prompt"},"Use Case 2: User Responds to a Slackbot Prompt"),(0,a.kt)("p",null,"Actor: User\nTriggering Event: The user receives a prompt from the Slackbot.\nNormal Flow:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"User in Slack community gets a notification that they have received a prompt from  the Slackbot."),(0,a.kt)("li",{parentName:"ol"},"User opens Slack."),(0,a.kt)("li",{parentName:"ol"},"User creates a response to the prompt (text, taking a picture, uploading an image, etc.)"),(0,a.kt)("li",{parentName:"ol"},"User replies to the Slackbot with their response to the prompt, which is sent to the moderator."),(0,a.kt)("li",{parentName:"ol"},"User waits for approval status from the Slackbot.\nAlternate Flow:"),(0,a.kt)("li",{parentName:"ol"},"User in Slack community gets a notification that they have received a prompt from  the Slackbot."),(0,a.kt)("li",{parentName:"ol"},"User does not respond within a certain timeframe. "),(0,a.kt)("li",{parentName:"ol"},"User is prompted by the Slackbot again to submit a response.")),(0,a.kt)("h2",{id:"use-case-3-moderator-reviews-user-submitted-response"},"Use Case 3: Moderator Reviews User-Submitted Response"),(0,a.kt)("p",null,"Actor: Moderator\nTriggering Event: The moderator receives a user-submitted response from the Slackbot.\nNormal Flow:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Moderator receives a notification from the Slackbot that a user has responded to a prompt. "),(0,a.kt)("li",{parentName:"ol"},"Moderator uses moderation and content guidelines to make a decision on whether to approve or deny the submission."),(0,a.kt)("li",{parentName:"ol"},"Moderator approves the response and selects the option for the Slackbot to post response to the appropriate channel"),(0,a.kt)("li",{parentName:"ol"},"The Slackbot notifies the community to react to the response.\nAlternate Flow:"),(0,a.kt)("li",{parentName:"ol"},"Moderator receives a notification from the Slackbot that a user has responded to a prompt. "),(0,a.kt)("li",{parentName:"ol"},"Moderator uses moderation and content guidelines to make a decision on whether to approve or deny the submission."),(0,a.kt)("li",{parentName:"ol"},"Moderator denies the response and selects the option for the Slackbot to re-prompt the user to submit a response that fits community guidelines.")),(0,a.kt)("h2",{id:"use-case-4-user-reacts-to-a-new-post-notification"},"Use Case 4: User Reacts to a New Post Notification"),(0,a.kt)("p",null,"Actor: User\nTriggering Event: The user receives a notification about a new post in the Slack community.\nNormal Flow:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A user in the Slack community is notified  by the Slackbot that another user has posted a response to a prompt."),(0,a.kt)("li",{parentName:"ol"},"User opens  Slack to view the response in the Slack community channel"),(0,a.kt)("li",{parentName:"ol"},"User interacts with the post by leaving a comment or a reaction(likes, emojis, etc)\nAlternate Flow:"),(0,a.kt)("li",{parentName:"ol"},"A user in the Slack community is notified  by the Slackbot that another user has posted a response to a prompt."),(0,a.kt)("li",{parentName:"ol"},"User chooses not to open the community channel."),(0,a.kt)("li",{parentName:"ol"},"After a certain amount of time, the user is sent another notification to react to the post.")),(0,a.kt)("h2",{id:"use-case-5-moderator-accesses-reaction-data-in-database"},"Use Case 5: Moderator Accesses Reaction Data in Database"),(0,a.kt)("p",null,"Actor: Moderator\nTriggering Event: The moderator wants to review reaction data from the Slackbot to analyze community engagement.\nNormal Flow:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A moderator authorized to access the system's database logs into the database management interface."),(0,a.kt)("li",{parentName:"ol"},"From the system's dashboard or menu, the moderator opens the reaction and post data collected by the Slackbot"),(0,a.kt)("li",{parentName:"ol"},"Moderator with filters and sorts data they want to review."),(0,a.kt)("li",{parentName:"ol"},"Moderator exports the data for analysis.")))}m.isMDXComponent=!0}}]);