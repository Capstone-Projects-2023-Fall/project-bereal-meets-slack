"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7349],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,c=m["".concat(o,".").concat(d)]||m[d]||k[d]||p;return n?a.createElement(c,l(l({ref:t},u),{},{components:n})):a.createElement(c,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,l=new Array(p);l[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<p;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>p,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const p={sidebar_position:1,description:"Api Specification Document"},l="Api Spec Document",i={unversionedId:"api-specification/design-api-intro",id:"api-specification/design-api-intro",title:"Api Spec Document",description:"Api Specification Document",source:"@site/docs/api-specification/design-api-intro.md",sourceDirName:"api-specification",slug:"/api-specification/design-api-intro",permalink:"/project-bereal-meets-slack/docs/api-specification/design-api-intro",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-bereal-meets-slack/edit/main/documentation/docs/api-specification/design-api-intro.md",tags:[],version:"current",lastUpdatedBy:"tup31461",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Api Specification Document"},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-bereal-meets-slack/docs/category/api-specification"},next:{title:"Bot Api Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/botAPISpec"}},o={},s=[{value:"<code>generateCSV(startTime, endTime)</code>",id:"generatecsvstarttime-endtime",level:4},{value:"<code>generateDataVis(startTime, endTime)</code>",id:"generatedatavisstarttime-endtime",level:4},{value:"Prompt API Methods",id:"prompt-api-methods",level:3},{value:"<code>get_prompt(prompt_id, partial_text)</code>",id:"get_promptprompt_id-partial_text",level:4},{value:"<code>set_prompt(prompt_id, text)</code>",id:"set_promptprompt_id-text",level:4},{value:"<code>add_prompt(text)</code>",id:"add_prompttext",level:4},{value:"<code>delete_prompt(prompt_id)</code>",id:"delete_promptprompt_id",level:4},{value:"Response API Methods",id:"response-api-methods",level:3},{value:"<code>get_response(response_id, user_id)</code>",id:"get_responseresponse_id-user_id",level:4},{value:"<code>set_response(num_reactions, time_to_respond, prompt_id, user_id, image_link)</code>",id:"set_responsenum_reactions-time_to_respond-prompt_id-user_id-image_link",level:4},{value:"<code>add_response(num_reactions, time_to_respond, prompt_id, user_id, image_link)</code>",id:"add_responsenum_reactions-time_to_respond-prompt_id-user_id-image_link",level:4}],u={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-spec-document"},"Api Spec Document"),(0,r.kt)("p",null,"This document details the methods for the BeReal ChatBot system"),(0,r.kt)("h1",{id:"bot-api-spec"},"Bot Api Spec"),(0,r.kt)("p",null,"This outlines the API specification for the Bot itself. It provides details on the methods the bot uses in its own function."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Bot Methods")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getCSV()"),"  "),(0,r.kt)("p",null,"Description: Gets the CSV fields"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: CSV fields (e.g., a list or string)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getDatavis()")),(0,r.kt)("p",null,"Description:Checks for CSV fields by parsing lines from a file"),(0,r.kt)("p",null,"Parameters: None or a file path"),(0,r.kt)("p",null,"Data Types: String (file path)"),(0,r.kt)("p",null,"Return Value: Parsed CSV fields or data visualization"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getOperatingHours()")),(0,r.kt)("p",null,"Description:Gets the operation hours of the bot"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: Operating hours (e.g., start and end times)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"sendPrompt()")),(0,r.kt)("p",null,"Description:Sends a prompt to a user"),(0,r.kt)("p",null,"Parameters: User ID or message content"),(0,r.kt)("p",null,"Data Types: String (User ID) or message data"),(0,r.kt)("p",null,"Return Value: Status of the prompt being sent (e.g., success or failure)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getResponseDelay()")),(0,r.kt)("p",null,"Description:Gets the time it takes when the bot has to resend a prompt to the user"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: Response delay time (e.g., integer or float)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getResponse()")),(0,r.kt)("p",null,"Description: Gets response from the user"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: User response (e.g., string)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"setOperatingHours(int newStart, int newEnd)")),(0,r.kt)("p",null,"Description:Sets the operating hours"),(0,r.kt)("p",null,"Parameters: New start and end times (integer)"),(0,r.kt)("p",null,"Data Types: Integer (newStart and newEnd)"),(0,r.kt)("p",null,"Return Value: Status of operating hours update"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"generateRandomPromptTime()")),(0,r.kt)("p",null,"Description:Generates a random time for when prompts are assigned"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: Random prompt assignment time (e.g., timestamp)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"generateRandomPrompt()")),(0,r.kt)("p",null,"Description:  Generates a random prompt"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: Randomly generated prompt (e.g., string)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getPromptList()")),(0,r.kt)("p",null,"Description: Gets the prompt list"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: List of prompts"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"setPromptList()")),(0,r.kt)("p",null,"Description: Sets the prompt list "),(0,r.kt)("p",null,"Parameters: List of prompts"),(0,r.kt)("p",null,"Data Types: List of strings"),(0,r.kt)("p",null,"Return Value: Status of prompt list update"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getResponsePostComment()")),(0,r.kt)("p",null,"Description: Gets and stores the response of a post comment"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: User response to a post comment (e.g., string)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"setResponsePostComment()")),(0,r.kt)("p",null,"Description:  Sets a response of a post comment"),(0,r.kt)("p",null,"Parameters: User response to a post comment (e.g., string)"),(0,r.kt)("p",null,"Data Types: String"),(0,r.kt)("p",null,"Return Value: Status of response update"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getBlackList()")),(0,r.kt)("p",null,"Description: Shows the blacklist"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: List of blacklisted users"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"addUserToBlackList()")),(0,r.kt)("p",null,"Description: Adds users to the blacklist"),(0,r.kt)("p",null,"Parameters: User ID or username"),(0,r.kt)("p",null,"Data Types: String"),(0,r.kt)("p",null,"Return Value: Status of user addition to the blacklist"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"removeUserFromBlackList()")),(0,r.kt)("p",null,"Description: Removes a user from the blacklist"),(0,r.kt)("p",null,"Parameters: User ID or username"),(0,r.kt)("p",null,"Data Types: String"),(0,r.kt)("p",null,"Return Value: Status of user removal from the blacklist"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"selectRandomUserToPrompt()")),(0,r.kt)("p",null,"Description: Selects a random user to assign a prompt to"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: Selected user for prompt assignment (e.g., User ID or username)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"getApprovalStatus()")),(0,r.kt)("p",null,"Description:Gets the approval status after sending a user response to the moderator"),(0,r.kt)("p",null,"Parameters: None"),(0,r.kt)("p",null,"Data Types: None"),(0,r.kt)("p",null,"Return Value: Approval status (e.g., boolean)"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"setApprovalStatus()")),(0,r.kt)("p",null,"Description: Sets the approval status after sending a user response to a moderator"),(0,r.kt)("p",null,"Parameters: Approval status (e.g., boolean)"),(0,r.kt)("p",null,"Data Types: Boolean"),(0,r.kt)("p",null,"Return Value: Status of approval status update"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"sendToResponseToMod()")),(0,r.kt)("p",null,"Description: Sends a user response to a prompt to a moderator"),(0,r.kt)("p",null,"Parameters: User response to a prompt"),(0,r.kt)("p",null,"Data Types: String"),(0,r.kt)("p",null,"Return Value: Status of sending to the moderator"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"postResponseToChannel()")),(0,r.kt)("p",null,"Description: Posts the response of a moderator to a user to a channel"),(0,r.kt)("p",null,"Parameters: Moderator's response to a user"),(0,r.kt)("p",null,"Data Types: String"),(0,r.kt)("p",null,"Return Value: Status of posting to a channel"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"deleteOriginalPromptFromChannel()")),(0,r.kt)("p",null,"Description:Deletes a prompt from a certain channel"),(0,r.kt)("p",null,"Parameters: Channel or prompt ID"),(0,r.kt)("p",null,"Data Types: String or identifier"),(0,r.kt)("p",null,"Return Value: Status of prompt deletion from the channel"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"setUsersAlreadyPromptedList()")),(0,r.kt)("p",null,"Description:  Sets a list of users that were already prompted by the bot"),(0,r.kt)("p",null,"Parameters: List of users"),(0,r.kt)("p",null,"Data Types: List of user IDs or usernames"),(0,r.kt)("p",null,"Return Value: Status of updating the list"),(0,r.kt)("p",null,"Output Variables: None"),(0,r.kt)("h1",{id:"server-api-spec"},"Server Api Spec"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Introduction")),(0,r.kt)("p",null,"This outlines the API specification for the server. It provides details on the methods available, their parameters, return values, and the usage."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Server Methods")),(0,r.kt)("h4",{id:"generatecsvstarttime-endtime"},(0,r.kt)("inlineCode",{parentName:"h4"},"generateCSV(startTime, endTime)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Generates a CSV file for a specified time range."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"startTime")," (int): The start time for data collection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"endTime")," (int): The end time for data collection."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Return Value:")," CSV file.")),(0,r.kt)("h4",{id:"generatedatavisstarttime-endtime"},(0,r.kt)("inlineCode",{parentName:"h4"},"generateDataVis(startTime, endTime)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Generates data visualization for a specified time range."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"startTime")," (int): The start time for data visualization."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"endTime")," (int): The end time for data visualization."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Return Value:")," Data visualization object.  ")),(0,r.kt)("h1",{id:"database-methods"},"Database Methods"),(0,r.kt)("h3",{id:"prompt-api-methods"},"Prompt API Methods"),(0,r.kt)("h4",{id:"get_promptprompt_id-partial_text"},(0,r.kt)("inlineCode",{parentName:"h4"},"get_prompt(prompt_id, partial_text)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Retrieve a prompt by its ID or partial text match."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - ID of the prompt to be retrieved. (Optional)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"partial_text")," - Partial text of the prompt to perform a partial match. (Optional)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - ID of the prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"text")," - The text of the prompt.")))),(0,r.kt)("h4",{id:"set_promptprompt_id-text"},(0,r.kt)("inlineCode",{parentName:"h4"},"set_prompt(prompt_id, text)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Set or update the text of a prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - ID of the prompt to be updated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"text")," - Updated text for the prompt."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return_code")," - Code indicating success or failure.")))),(0,r.kt)("h4",{id:"add_prompttext"},(0,r.kt)("inlineCode",{parentName:"h4"},"add_prompt(text)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Add a new prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"text")," - Text of the new prompt."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - ID of the newly added prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return_code")," - Code indicating success or failure.")))),(0,r.kt)("h4",{id:"delete_promptprompt_id"},(0,r.kt)("inlineCode",{parentName:"h4"},"delete_prompt(prompt_id)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Delete a prompt by its ID."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - ID of the prompt to be deleted."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return_code")," - Code indicating success or failure.")))),(0,r.kt)("h3",{id:"response-api-methods"},"Response API Methods"),(0,r.kt)("h4",{id:"get_responseresponse_id-user_id"},(0,r.kt)("inlineCode",{parentName:"h4"},"get_response(response_id, user_id)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Get the user response to a BMS bot prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"response_id")," - ID of the response to be retrieved (Optional)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user_id")," - ID for the user who who posted the response. (Optional)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return_code")," - Code indicating success or failure."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"response_id")," - ID of the response."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"num_reactions")," - Number of reactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"time_to_respond")," - Time taken for user to respond."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user_id")," - ID for the user who who posted the response."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"image_link")," - Link to the response in Discord chat."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - Foreign key to the Prompt data table.")))),(0,r.kt)("h4",{id:"set_responsenum_reactions-time_to_respond-prompt_id-user_id-image_link"},(0,r.kt)("inlineCode",{parentName:"h4"},"set_response(num_reactions, time_to_respond, prompt_id, user_id, image_link)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Set or update a user response to a BMS bot prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"num_reactions")," - Number of reactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"time_to_respond")," - Time taken for user to respond."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - Foreign key to the Prompt data table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user_id")," - ID for the user who who posted the response. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"image_link")," - Link to the response in Discord channel."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return_code")," - Code indicating success or failure.")))),(0,r.kt)("h4",{id:"add_responsenum_reactions-time_to_respond-prompt_id-user_id-image_link"},(0,r.kt)("inlineCode",{parentName:"h4"},"add_response(num_reactions, time_to_respond, prompt_id, user_id, image_link)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," Add a new user response to a BMS bot prompt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"num_reactions")," - Number of reactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"time_to_respond")," - Time taken for user to respond."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prompt_id")," - Foreign key to the Prompt data table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user_id")," - ID for the user who who posted the response."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"image_link")," - Link to the response in Discord channel."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return_code")," - Code indicating success or failure.")))))}m.isMDXComponent=!0}}]);