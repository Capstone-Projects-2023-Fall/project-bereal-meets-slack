"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8319],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3091:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:9},o="Handle User Submission Utility Module Spec",s={unversionedId:"api-specification/handleUserSubmissionSpec",id:"api-specification/handleUserSubmissionSpec",title:"Handle User Submission Utility Module Spec",description:"Methods",source:"@site/docs/api-specification/handleUserSubmissionSpec.md",sourceDirName:"api-specification",slug:"/api-specification/handleUserSubmissionSpec",permalink:"/project-bereal-meets-slack/docs/api-specification/handleUserSubmissionSpec",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-bereal-meets-slack/edit/main/documentation/docs/api-specification/handleUserSubmissionSpec.md",tags:[],version:"current",lastUpdatedBy:"Tara Feeley",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"docsSidebar",previous:{title:"Get Random User Utility Module Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/getRandomSpec"},next:{title:"Help Utility Module Spec",permalink:"/project-bereal-meets-slack/docs/api-specification/helpUtilsMethodSpec"}},l={},c=[{value:"Methods",id:"methods",level:2},{value:"<code>handleUserSubmission(attachment, caption, interaction)</code>",id:"handleusersubmissionattachment-caption-interaction",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Execution:",id:"execution",level:4},{value:"Deny Flow:",id:"deny-flow",level:4},{value:"Approval Flow:",id:"approval-flow",level:4}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"handle-user-submission-utility-module-spec"},"Handle User Submission Utility Module Spec"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"handleusersubmissionattachment-caption-interaction"},(0,r.kt)("inlineCode",{parentName:"h3"},"handleUserSubmission(attachment, caption, interaction)")),(0,r.kt)("p",null,"Handles user submissions for Discord bot prompts."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"attachment")),(0,r.kt)("td",{parentName:"tr",align:null},"Discord.Attachment"),(0,r.kt)("td",{parentName:"tr",align:null},"The file attached to the submission.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"caption")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The optional caption provided by the user.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"interaction")),(0,r.kt)("td",{parentName:"tr",align:null},"Discord.CommandInteraction"),(0,r.kt)("td",{parentName:"tr",align:null},"The interaction object representing the user's command interaction.")))),(0,r.kt)("h4",{id:"execution"},"Execution:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Verifies if the user is prompted and if the prompt matches the user ID."),(0,r.kt)("li",{parentName:"ul"},"Defers and then edits the user's reply to indicate the submission has been received."),(0,r.kt)("li",{parentName:"ul"},"Checks if the attachment is an image."),(0,r.kt)("li",{parentName:"ul"},"Notifies moderators about the submission and waits for their responses.")),(0,r.kt)("h4",{id:"deny-flow"},"Deny Flow:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If a moderator denies the submission, prompts the moderator for a reason and notifies the submitter."),(0,r.kt)("li",{parentName:"ul"},"Tracks denial counts for users and issues warnings."),(0,r.kt)("li",{parentName:"ul"},"If a user reaches a strike limit, adds them to the blacklist and notifies moderators.")),(0,r.kt)("h4",{id:"approval-flow"},"Approval Flow:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If a moderator approves the submission, edits messages accordingly and notifies moderators."),(0,r.kt)("li",{parentName:"ul"},"Sends an embedded message to the specified channel containing the submission details.")))}d.isMDXComponent=!0}}]);